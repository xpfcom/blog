<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>x-Blog</title><link>https://xpfcom.github.io/blog</link><description>✌️ 随笔小记🔸技术分享</description><copyright>x-Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://raw.githubusercontent.com/xpfcom/blog/refs/heads/main/logo.svg</url><title>avatar</title><link>https://xpfcom.github.io/blog</link></image><lastBuildDate>Wed, 16 Apr 2025 15:40:20 +0000</lastBuildDate><managingEditor>x-Blog</managingEditor><ttl>60</ttl><webMaster>x-Blog</webMaster><item><title>VPS 常用脚本汇总</title><link>https://xpfcom.github.io/blog/post/VPS%20-chang-yong-jiao-ben-hui-zong.html</link><description>### **测评类**
[IP质量体检脚本](https://github.com/xykt/IPQuality)
```
bash &lt;(curl -Ls IP.Check.Place)
```

[VPS融合怪服务器测评脚本](https://github.com/spiritLHLS/ecs)
```
curl -L https://github.com/spiritLHLS/ecs/raw/main/ecs.sh -o ecs.sh &amp;&amp; chmod +x ecs.sh &amp;&amp; bash ecs.sh -m 1
```

[检测VPS内存是否超售的一键脚本](https://github.com/uselibrary/memoryCheck)
```
curl https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh | bash
```

### **工具类**
[vps一键脚本工具](https://github.com/eooce/ssh_tool)
```
curl -fsSL https://raw.githubusercontent.com/eooce/ssh_tool/main/ssh_tool.sh -o ssh_tool.sh &amp;&amp; chmod +x ssh_tool.sh &amp;&amp; ./ssh_tool.sh
```

### **部署类**
[xeefei/3x-ui](https://github.com/xeefei/3x-ui)
```
bash &lt;(curl -Ls https://raw.githubusercontent.com/xeefei/3x-ui/master/install.sh)
```。</description><guid isPermaLink="true">https://xpfcom.github.io/blog/post/VPS%20-chang-yong-jiao-ben-hui-zong.html</guid><pubDate>Wed, 16 Apr 2025 15:39:53 +0000</pubDate></item><item><title>openwrt 插件对照表</title><link>https://xpfcom.github.io/blog/post/openwrt%20-cha-jian-dui-zhao-biao.html</link><description>- openwrt 插件对照表

| 软件名                       | 说明                   | 中文说明    |
| -----------------------------|------------------------| ------------|
| luci-app-alist               |  file list program   | 支持多存储的文件列表程序   |
| luci-app-advanced            | System advanced settings               | 系统高级设置        |
| luci-app-adguardhome         | Block adg          |  AdG去广告      |
| luci-theme-atmaterial_new    | atmaterial theme (adapted to luci-18.06) | Atmaterial 三合一主题        |
| luci-theme-argone            | argone theme           | 修改老竭力主题名     |
| luci-app-argone-config       | argone theme settings            |  argone主题设置      |
| luci-app-aliddns             | aliyunddns         |   阿里云ddns插件      |
| luci-app-aliyundrive-webdav  | Aliyun Disk WebDAV Service            |  阿里云盘 WebDAV 服务   |
| luci-app-dnsfilter           | dns ad filtering            | 基于DNS的广告过滤        |
| luci-theme-design            | design theme          | design 主题        |
| luci-app-amlogic             | Amlogic Service             |  晶晨宝盒   |
| luci-app-eqos                | Speed ​​limit by IP address       | 依IP地址限速      |
| luci-app-gost                | https proxy      | 隐蔽的https代理   |
| luci-app-openclash           | openclash proxy            |  clash的图形代理软件      |
| luci-app-passwall            | passwall proxy      | passwall代理软件        |
| luci-app-wechatpush          | WeChat/DingTalk Pushed plugins    |   微信/钉钉推送        |
| luci-theme-tomato            | Modify topic name             |  tomato主题        |
| luci-app-smartdns            | smartdns dns pollution prevention     |  smartdns DNS防污染       |
| luci-app-ssr-plus            | ssr-plus proxy              | ssr-plus 代理软件       |
| luci-app-store               | store software repository            |  应用商店   |
| luci-theme-mcat              | Modify topic name          |   mcat主题        |
| luci-app-mosdns              | mosdns dns offload            |DNS 国内外分流解析与广告过滤        |
| luci-app-unblockneteasemusic | Unlock NetEase Cloud Music         | 解锁网易云音乐   |
| luci-app-homeproxy           | homeproxy  proxy        | homeproxy 代理   |。</description><guid isPermaLink="true">https://xpfcom.github.io/blog/post/openwrt%20-cha-jian-dui-zhao-biao.html</guid><pubDate>Wed, 16 Apr 2025 15:38:59 +0000</pubDate></item><item><title>cloudflare Tunnels &amp; R2S ImmortalWrt 实践分享</title><link>https://xpfcom.github.io/blog/post/cloudflare%20Tunnels%20%26%20R2S%20ImmortalWrt%20-shi-jian-fen-xiang.html</link><description>## cloudflare：点击Zero Trust→点击Networks→点击Tunnels→点击+Create a tunnel→选择Cloudflared→点击Next
_________________________________

## 隧道名称：Tunnel 1

#### 1、隧道握手码（备注）：
```
++eyJhIjoiNWVjMDk2OGYyNTUzMmJhZDg4ODRhZTI5ZjhNThjNjAiLCJ0IjoiNTNmZWEzOGEtNDMwMy00YzgzLThkNDMtNzE3ZTlkYTNjYjI3IiwicyI6IlpUWTFNMlJoWkRRdFpEVmtOUzAwTVRFMkxXRmhaVGt0WmpKbU1UUXhOMk5tTnpOayJ9++
```

_________________________________

#### 2、OpenWrt安装程序
项目地址：https://github.com/cloudflare/cloudflared/releases/（如更新 替换下方代码日期）
```
VERSION='2024.6.1'
curl -O -L \
https://github.com/cloudflare/cloudflared/releases/download/${VERSION}/cloudflared-linux-arm64 \
&amp;&amp; chmod +x cloudflared-linux-arm64 \
&amp;&amp; mv cloudflared-linux-arm64 /usr/bin/cloudflared
```

_________________________________

#### 3、创建文件 赋予可执行权限
```
touch /etc/init.d/cloudflared
chmod +x /etc/init.d/cloudflared
```

_________________________________

#### 4、SSH替换 /ect/init.d/cloudflare 文件代码
```
#!/bin/sh /etc/rc.common
USE_PROCD=1
START=95
STOP=01
cfd_init='/etc/init.d/cloudflared'
cfd_token='++eyJhIjoiNWVjMDk2OGYyNTUzMmJhZDg4ODRhZTI5ZjhNThjNjAiLCJ0IjoiNTNmZWEzOGEtNDMwMy00YzgzLThkNDMtNzE3ZTlkYTNjYjI3IiwicyI6IlpUWTFNMlJoWkRRdFpEVmtOUzAwTVRFMkxXRmhaVGt0WmpKbU1UUXhOMk5tTnpOayJ9++'
boot()
{
ubus -t 30 wait_for network.interface network.loopback 2&gt;/dev/null
rc_procd start_service
}
start_service() {
if [ $('${cfd_init}' enabled; printf '%u' ${?}) -eq 0 ]
then
procd_open_instance
procd_set_param command /usr/bin/cloudflared --no-autoupdate tunnel run --token ${cfd_token}
procd_set_param stdout 1
procd_set_param stderr 1
procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
procd_close_instance
fi
}
stop_service() {
pidof cloudflared &amp;&amp; kill -SIGINT `pidof cloudflared`
}
```

_________________________________

##### 5、设置 cloudflared 文件开机启动 运行 cloudflared 文件
```
/etc/init.d/cloudflared enable
/etc/init.d/cloudflared start
```。</description><guid isPermaLink="true">https://xpfcom.github.io/blog/post/cloudflare%20Tunnels%20%26%20R2S%20ImmortalWrt%20-shi-jian-fen-xiang.html</guid><pubDate>Wed, 16 Apr 2025 14:59:56 +0000</pubDate></item></channel></rss>